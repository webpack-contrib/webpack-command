// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`lib/flags > should display help #0 1`] = `
"  --context                     The root directory for resolving entry point and stats
  --debug                       Switch loaders to debug mode
  --devtool                     Enable devtool for better debugging experience.
                                [2me.g. --devtool eval-cheap-module-source-map[22m
  --entry                       The entry point
  --help                        Show usage information and the options listed here
  --log-level                   Limit all process console messages to a specific level and above
                                [2mLevels: trace, debug, info, warn, error, silent[22m
  --log-time                    Instruct the logger and dependencies to display a timestamp
  --progress                    Instructs webpack to track and display build progress
                                [2mThis is often used with --profile[22m
  --reporter                    Specifies the reporter to use for generating console output for a build
  --require                     Preload one or more modules before loading the webpack configuration
                                Typically used for language-specific require hooks
  --run-dev                     An alias for --debug --devtool eval-cheap-module-source-map --output-pathinfo
  --run-prod                    An alias for --optimize-minimize --define process.env.NODE_ENV=\\"production\\"
  --version                     Display the webpack-command version
  --watch                       Watch the filesystem for changes

[4mAdvanced[24m
  --bail                        Abort the compilation on first error
  --cache                       Enable in memory caching
  --define                      Define any free var in the bundle
  --hot                         Enables Hot Module Replacement
  --plugin                      Load this plugin
  --prefetch                    Prefetch this request
                                [2me.g. --prefetch ./file.js[22m
  --profile                     Profile the compilation and include information in stats
  --provide                     Provide these modules as free vars in all modules
                                [2me.g. --provide.jQuery jquery[22m
  --records-input-path          Path to the records file (reading)
  --records-output-path         Path to the records file (writing)
  --records-path                Path to the records file
  --target                      The targeted execution environment
  --watch-aggregate-timeout     Timeout for gathering changes while watching
  --watch-poll                  The polling interval for watching (also enable polling)
  --watch-stdin                 Exit the process when stdin is closed

[4mConfiguration File[24m
  --config                      Path to the config file
  --config-name                 Name of the config to use
  --config-register             [1mDeprecated.[22m Please use --require.

  --mode                        Specifies the build mode to use; development or production

[4mModules[24m
  --module-bind                 Bind an extension to a loader
  --module-bind-post            Bind an extension to a postLoader
  --module-bind-pre             Bind an extension to a preLoader

[4mOptimization[24m
  --optimize-max-chunks         Try to keep the chunk count below a limit
  --optimize-min-chunk-size     Try to keep the chunk size above a limit
  --optimize-minimize           Minimize javascript and switches loaders to minimizing

[4mOutput[24m
  --output                      The output path and file for compilation assets
  --output-chunk-filename       The output filename for additional chunks
  --output-filename             The output filename of the bundle
  --output-jsonp-function       The name of the JSONP function used for chunk loading
  --output-library              Expose the exports of the entry point as library
  --output-library-target       The type for exposing the exports of the entry point as library
  --output-path                 The output path for compilation assets
  --output-pathinfo             Include a comment with the request for every dependency (require, import, etc.)
  --output-public-path          The public path for the assets
  --output-source-map-filename  The output filename for the SourceMap

[4mResolver[24m
  --resolve-alias               Setup a module alias for resolving
                                [2me.g. --resolve-alias.jquery jquery.plugin[22m
  --resolve-extensions          Setup extensions that should be used to resolve modules
                                [2me.g. .es6,.js[22m
  --resolve-loader-alias        Setup a loader alias for resolving
"
`;

exports[`lib/flags > should display help #1 1`] = `
"  --context                     The root directory for resolving entry point and stats
  --debug                       Switch loaders to debug mode
  --devtool                     Enable devtool for better debugging experience.
                                [2me.g. --devtool eval-cheap-module-source-map[22m
  --entry                       The entry point
  --help                        Show usage information and the options listed here
  --log-level                   Limit all process console messages to a specific level and above
                                [2mLevels: trace, debug, info, warn, error, silent[22m
  --log-time                    Instruct the logger for webpack-serve and dependencies to display a timestamp
  --reporter                    Specifies the reporter tpo use for generating console output for a build
  --run-dev                     shortcut for --debug --devtool eval-cheap-module-source-map --output-pathinfo
  --run-prod                    shortcut for --optimize-minimize --define process.env.NODE_ENV=\\"production\\"
  --version                     Display the webpack-command version
  --watch                       Watch the filesystem for changes

[4mAdvanced[24m
  --bail                        Abort the compilation on first error
  --cache                       Enable in memory caching
  --define                      Define any free var in the bundle
  --hot                         Enables Hot Module Replacement
  --plugin                      Load this plugin
  --prefetch                    Prefetch this request
                                [2me.g. --prefetch ./file.js[22m
  --profile                     Profile the compilation and include information in stats
  --provide                     Provide these modules as free vars in all modules
                                [2me.g. --provide jQuery=jquery[22m
  --records-input-path          Path to the records file (reading)
  --records-output-path         Path to the records file (writing)
  --records-path                Path to the records file
  --target                      The targeted execution environment
  --watch-aggregate-timeout     Timeout for gathering changes while watching
  --watch-poll                  The polling interval for watching (also enable polling)
  --watch-stdin                 Exit the process when stdin is closed

[4mConfiguration File[24m
  --config                      Path to the config file
  --config-name                 Name of the config to use
  --config-register             [1mDeprecated.[22m Please use --require.
                                Preload one or more modules before loading the webpack configuration
  --mode                        Specifies the build mode to use; development or production

[4mModules[24m
  --module-bind                 Bind an extension to a loader
  --module-bind-post            Bind an extension to a prostLoader
  --module-bind-pre             Bind an extension to a preLoader

[4mOptimization[24m
  --optimize-max-chunks         Try to keep the chunk count below a limit
  --optimize-min-chunk-size     Try to keep the chunk size above a limit
  --optimize-minimize           Minimize javascript and switches loaders to minimizing

[4mOutput[24m
  --output                      The output path and file for compilation assets
  --output-chunk-filename       The output filename for additional chunks
  --output-filename             The output filename of the bundle
  --output-jsonp-function       The name of the jsonp function used for chunk loading
  --output-library              Expose the exports of the entry point as library
  --output-library-target       The type for exposing the exports of the entry point as library
  --output-path                 The output path for compilation assets
  --output-pathinfo             Include a comment with the request for every dependency (require, import, etc.)
  --output-public-path          The public path for the assets
  --output-source-map-filename  The output filename for the SourceMap

[4mResolver[24m
  --resolve-alias               Setup a module alias for resolving
                                [2me.g. jquery=jquery.plugin[22m
  --resolve-extensions          Setup extensions that should be used to resolve modules
                                [2me.g. .es6,.js[22m
  --resolve-loader-alias        Setup a loader alias for resolving
"
`;

exports[`lib/flags > should parse flags cleanly #0 1`] = `
Object {
  "context": "<PROJECT_ROOT>",
  "output": Object {},
}
`;

exports[`lib/flags > should return minimist opts #0 1`] = `
Object {
  "bail": Object {
    "type": "boolean",
  },
  "cache": Object {
    "type": "boolean",
  },
  "config": Object {
    "type": "string",
  },
  "config-name": Object {
    "type": "string",
  },
  "config-register": Object {
    "alias": "r",
    "type": Array [
      "string",
      "array",
    ],
  },
  "context": Object {
    "type": "string",
  },
  "debug": Object {
    "type": "boolean",
  },
  "define": Object {
    "type": "object",
  },
  "devtool": Object {
    "type": "string",
  },
  "entry": Object {
    "type": Array [
      "array",
      "object",
      "string",
    ],
  },
  "help": Object {},
  "hot": Object {
    "type": "boolean",
  },
  "log-level": Object {
    "type": "string",
  },
  "log-time": Object {},
  "mode": Object {
    "type": "string",
  },
  "module-bind": Object {
    "type": "string",
  },
  "module-bind-post": Object {
    "type": "string",
  },
  "module-bind-pre": Object {
    "type": "string",
  },
  "optimize-max-chunks": Object {
    "apply": [Function],
    "type": "number",
  },
  "optimize-min-chunk-size": Object {
    "apply": [Function],
    "type": "number",
  },
  "optimize-minimize": Object {
    "apply": [Function],
    "type": "boolean",
  },
  "output": Object {
    "alias": "o",
    "type": "string",
  },
  "output-chunk-filename": Object {
    "type": "string",
  },
  "output-filename": Object {
    "type": "string",
  },
  "output-jsonp-function": Object {
    "type": "string",
  },
  "output-library": Object {
    "type": "string",
  },
  "output-library-target": Object {
    "type": "string",
  },
  "output-path": Object {
    "type": "string",
  },
  "output-pathinfo": Object {
    "type": "boolean",
  },
  "output-public-path": Object {
    "type": "string",
  },
  "output-source-map-filename": Object {
    "type": "string",
  },
  "plugin": Object {
    "type": "string",
  },
  "prefetch": Object {
    "type": "string",
  },
  "profile": Object {
    "type": "boolean",
  },
  "progress": Object {
    "type": "boolean",
  },
  "provide": Object {
    "type": "object",
  },
  "records-input-path": Object {
    "type": "string",
  },
  "records-output-path": Object {
    "type": "string",
  },
  "records-path": Object {
    "type": "string",
  },
  "reporter": Object {
    "type": "string",
  },
  "require": Object {
    "type": Array [
      "string",
      "array",
    ],
  },
  "resolve-alias": Object {
    "type": "object",
  },
  "resolve-extensions": Object {
    "type": Array [
      "string",
      "array",
    ],
  },
  "resolve-loader-alias": Object {
    "type": "object",
  },
  "run-dev": Object {
    "alias": "d",
    "type": "boolean",
  },
  "run-prod": Object {
    "alias": "p",
    "type": "boolean",
  },
  "target": Object {
    "type": "string",
  },
  "version": Object {},
  "watch": Object {
    "alias": "w",
    "type": "boolean",
  },
  "watch-aggregate-timeout": Object {
    "type": Array [
      "string",
      "number",
    ],
  },
  "watch-poll": Object {
    "type": Array [
      "string",
      "number",
    ],
  },
  "watch-stdin": Object {
    "alias": "stdin",
    "type": "boolean",
  },
}
`;

exports[`lib/flags/util > should not allow invalid value types #0 1`] = `
[Error: Flags were specified with invalid values:

  [34m--debug[39m  must be set to a [1mboolean[22m

Please check the command executed.]
`;

exports[`lib/flags/util > should suggest alternatives #0 1`] = `
[Error: Flags were specified that were not recognized:

  [34m--debg[39m  Did you mean [1m--debug[22m?
  [34m--wath[39m  Did you mean [1m--watch[22m?

Please check the command executed.]
`;
